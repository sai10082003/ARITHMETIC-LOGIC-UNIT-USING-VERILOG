`timescale 1ns / 1ps
module ALU_tb;

reg [3:0] A;
reg [3:0] B;
reg [3:0] ALU_Sel;
wire [7:0] ALU_Out;
wire Overflow;


ALU uut (
    .A(A),
    .B(B),
    .ALU_Sel(ALU_Sel),
    .ALU_Out(ALU_Out),
    .Overflow(Overflow)
);

initial begin

    A = 0;
    B = 0;
    ALU_Sel = 0;

    $monitor("Time: %0t | A: %b | B: %b | ALU_Sel: %b | ALU_Out: %b | Overflow: %b", $time, A, B, ALU_Sel, ALU_Out, Overflow);

    #10 A = 4'b0011; B = 4'b0101; ALU_Sel = 4'b0000; 
    #10 A = 4'b1111; B = 4'b0001; ALU_Sel = 4'b0000; 

    
    #10 A = 4'b0110; B = 4'b0010; ALU_Sel = 4'b1010; 
    #10 A = 4'b0010; B = 4'b0110; ALU_Sel = 4'b1010; 

    
    #10 A = 4'b0011; B = 4'b0010; ALU_Sel = 4'b0001; 

    
    #10 A = 4'b0110; B = 4'b0010; ALU_Sel = 4'b0010; 
    #10 A = 4'b0110; B = 4'b0000; ALU_Sel = 4'b0010; 

    
    #10 A = 4'b1100; B = 4'b1010; ALU_Sel = 4'b0011; 

    
    #10 A = 4'b1100; B = 4'b1010; ALU_Sel = 4'b0100; 
    
    #10 A = 4'b1100; ALU_Sel = 4'b0101; 

   
    #10 A = 4'b1100; B = 4'b1010; ALU_Sel = 4'b0110; 

    
    #10 A = 4'b1100; B = 4'b1010; ALU_Sel = 4'b0111; 

    
    #10 A = 4'b0011; ALU_Sel = 4'b1000; 

   
    #10 A = 4'b0011; ALU_Sel = 4'b1001; 


    #10 $finish;
end

endmodule
